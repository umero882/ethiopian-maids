-- =====================================================
-- DIAGNOSTIC SCRIPT: Check Database Schema Status
-- Run this in Supabase SQL Editor to see what's missing
-- =====================================================

-- =====================================================
-- 1. CHECK AGENCY_PROFILES COLUMNS
-- =====================================================
SELECT
    '=== AGENCY_PROFILES COLUMNS ===' as section;

SELECT
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns
WHERE table_schema = 'public'
AND table_name = 'agency_profiles'
ORDER BY ordinal_position;

-- Check if specific columns exist
SELECT
    '=== MISSING COLUMNS CHECK ===' as section;

SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'agency_profiles' AND column_name = 'agency_description'
    ) THEN '‚úÖ agency_description EXISTS'
    ELSE '‚ùå agency_description MISSING' END as status
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'agency_profiles' AND column_name = 'average_rating'
    ) THEN '‚úÖ average_rating EXISTS'
    ELSE '‚ùå average_rating MISSING' END
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'agency_profiles' AND column_name = 'business_email'
    ) THEN '‚úÖ business_email EXISTS'
    ELSE '‚ùå business_email MISSING' END;

-- =====================================================
-- 2. CHECK AUDIT_LOGS COLUMNS
-- =====================================================
SELECT
    '=== AUDIT_LOGS COLUMNS ===' as section;

SELECT
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns
WHERE table_schema = 'public'
AND table_name = 'audit_logs'
ORDER BY ordinal_position;

-- Check for missing columns
SELECT
    '=== AUDIT_LOGS MISSING COLUMNS ===' as section;

SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'audit_logs' AND column_name = 'resource_id'
    ) THEN '‚úÖ resource_id EXISTS'
    ELSE '‚ùå resource_id MISSING' END as status
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'audit_logs' AND column_name = 'resource_type'
    ) THEN '‚úÖ resource_type EXISTS'
    ELSE '‚ùå resource_type MISSING' END
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'audit_logs' AND column_name = 'details'
    ) THEN '‚úÖ details EXISTS'
    ELSE '‚ùå details MISSING' END
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'audit_logs' AND column_name = 'user_email'
    ) THEN '‚úÖ user_email EXISTS'
    ELSE '‚ùå user_email MISSING' END
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'audit_logs' AND column_name = 'action'
    ) THEN '‚úÖ action EXISTS'
    ELSE '‚ùå action MISSING' END
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'audit_logs' AND column_name = 'ip_address'
    ) THEN '‚úÖ ip_address EXISTS'
    ELSE '‚ùå ip_address MISSING' END;

-- =====================================================
-- 3. CHECK IF AGENCY TABLES EXIST
-- =====================================================
SELECT
    '=== AGENCY TABLES CHECK ===' as section;

SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.tables
        WHERE table_name = 'agency_subscriptions'
    ) THEN '‚úÖ agency_subscriptions EXISTS'
    ELSE '‚ùå agency_subscriptions MISSING' END as status
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.tables
        WHERE table_name = 'agency_tasks'
    ) THEN '‚úÖ agency_tasks EXISTS'
    ELSE '‚ùå agency_tasks MISSING' END
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.tables
        WHERE table_name = 'agency_jobs'
    ) THEN '‚úÖ agency_jobs EXISTS'
    ELSE '‚ùå agency_jobs MISSING' END
UNION ALL
SELECT
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.tables
        WHERE table_name = 'agency_placements'
    ) THEN '‚úÖ agency_placements EXISTS'
    ELSE '‚ùå agency_placements MISSING' END;

-- =====================================================
-- 4. LIST ALL TABLES IN PUBLIC SCHEMA
-- =====================================================
SELECT
    '=== ALL TABLES IN PUBLIC SCHEMA ===' as section;

SELECT
    table_name,
    CASE
        WHEN table_name LIKE 'agency_%' THEN 'üè¢ Agency Table'
        WHEN table_name LIKE '%profile%' THEN 'üë§ Profile Table'
        WHEN table_name = 'audit_logs' THEN 'üìã Audit Table'
        ELSE 'üìä Other Table'
    END as table_type
FROM information_schema.tables
WHERE table_schema = 'public'
AND table_type = 'BASE TABLE'
ORDER BY table_name;

-- =====================================================
-- 5. COUNT COLUMNS IN KEY TABLES
-- =====================================================
SELECT
    '=== COLUMN COUNTS ===' as section;

SELECT
    'agency_profiles' as table_name,
    COUNT(*) as column_count,
    CASE
        WHEN COUNT(*) >= 30 THEN '‚úÖ Looks complete'
        WHEN COUNT(*) >= 15 THEN '‚ö†Ô∏è Missing some columns'
        ELSE '‚ùå Many columns missing'
    END as status
FROM information_schema.columns
WHERE table_name = 'agency_profiles'
UNION ALL
SELECT
    'audit_logs' as table_name,
    COUNT(*) as column_count,
    CASE
        WHEN COUNT(*) >= 10 THEN '‚úÖ Looks complete'
        WHEN COUNT(*) >= 5 THEN '‚ö†Ô∏è Missing some columns'
        ELSE '‚ùå Many columns missing'
    END as status
FROM information_schema.columns
WHERE table_name = 'audit_logs';

-- =====================================================
-- 6. CHECK SUPABASE POSTGREST SCHEMA CACHE
-- =====================================================
SELECT
    '=== SCHEMA CACHE INFO ===' as section;

SELECT
    'Note: If tables/columns exist but queries fail with 406,' as info
UNION ALL
SELECT
    'the PostgREST schema cache may need refreshing.' as info
UNION ALL
SELECT
    'Go to: Settings ‚Üí API ‚Üí Restart PostgREST server' as info;

-- =====================================================
-- SUMMARY
-- =====================================================
SELECT
    '=== SUMMARY ===' as section;

SELECT
    'If you see ‚ùå MISSING above, the migration did not apply correctly.' as result
UNION ALL
SELECT
    'If you see ‚úÖ EXISTS but still get 406 errors, restart PostgREST.' as result
UNION ALL
SELECT
    'Run the FIX script next if columns are missing.' as result;
