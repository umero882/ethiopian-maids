{
  "permissions": {
    "allow": [
      "Bash(DATABASE_URL=\"postgres://postgres.kstoksqbhmxnrmspfywm:zU8s5wq7lJvc5bP1@aws-1-ap-south-1.pooler.supabase.com:6543/postgres?sslmode=require\" NODE_TLS_REJECT_UNAUTHORIZED=0 node:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nInitial commit: Ethiopian Maids Service Platform\n\nComplete React-based platform with multi-user dashboards:\n- Agency dashboard with calendar, messaging, sponsors management\n- Maid profiles and availability system\n- Sponsor management and job postings\n- PostgreSQL database with comprehensive migrations\n- Supabase integration with RLS policies\n- Real-time messaging and notifications\n- Payment processing integration\n\nTech Stack:\n- React 18 + Vite\n- TailwindCSS + Radix UI\n- PostgreSQL + Supabase\n- Jest + Playwright testing\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git branch:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Add poly repo CI/CD and deployment infrastructure\n\n- Enhanced CI workflow for development, staging, and main branches\n- Added automated Vercel deployment workflow for all environments\n- Created comprehensive branch strategy documentation\n- Enhanced PR template with branch selection guidance\n- Configured Vercel with GitHub integration\n- Added complete Vercel setup guide with environment configs\n\nFeatures:\n- Multi-environment CI/CD pipeline\n- Branch-specific deployment automation\n- Security audit for staging and production\n- PR deployment preview comments\n- Comprehensive documentation for team onboarding\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(git commit:*)",
      "Bash(node scripts/verify-deployment.js:*)",
      "Bash(node scripts/verify-deployment.cjs:*)",
      "Bash(powershell -ExecutionPolicy Bypass -File scripts/setup-github-secrets.ps1)",
      "Bash(bash:*)",
      "Bash(git pull:*)",
      "Bash(gh run list:*)",
      "Bash(if [ -d \".vercel\" ])",
      "Bash(then echo \"Directory exists\")",
      "Bash(else echo \"Directory does not exist\")",
      "Bash(fi)",
      "Bash(npm install:*)",
      "Bash(git submodule:*)",
      "Bash(cat:*)",
      "Bash(git rm:*)",
      "Bash(gh --version:*)",
      "Bash(if [ -d \"apps\" ])",
      "Bash(then echo \"apps/ directory exists\")",
      "Bash(else echo \"apps/ directory does NOT exist\")",
      "Bash(if [ -d \"services\" ])",
      "Bash(then echo \"services/ directory exists\")",
      "Bash(else echo \"services/ directory does NOT exist\")",
      "Bash(if [ -d \"packages\" ])",
      "Bash(then echo \"packages/ directory exists\")",
      "Bash(else echo \"packages/ directory does NOT exist\")",
      "Bash(npm run build:*)",
      "Bash(powershell -Command \"Get-Content ''scripts/setup-github-secrets.ps1'' -Encoding UTF8 | Select-String -Pattern ''GitHub Token'' -Context 1,1\")",
      "Bash(winget install:*)",
      "Bash(powershell -Command \"echo ''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'' | gh auth login --with-token\")",
      "Bash(powershell -Command \"& ''C:\\Program Files\\GitHub CLI\\gh.exe'' --version\")",
      "Bash(powershell -Command \"echo ''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'' | & ''C:\\Program Files\\GitHub CLI\\gh.exe'' auth login --with-token\")",
      "Bash(powershell -Command \"& ''C:\\Program Files\\GitHub CLI\\gh.exe'' auth status\")",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"& ''scripts/setup-github-secrets.ps1'' ; if ($LASTEXITCODE -eq 1) { Read-Host ''Continue? (y/n)'' | Out-Null ; ''y'' }\")",
      "Bash(powershell -ExecutionPolicy Bypass -File scripts/run-setup-auto.ps1)",
      "Bash(powershell -ExecutionPolicy Bypass -File scripts/setup-github-secrets.ps1 -y)",
      "Bash(powershell -Command \"& 'C:\\Program Files\\GitHub CLI\\gh.exe' repo view\":*)",
      "Bash(powershell -Command \"& ''C:\\Program Files\\GitHub CLI\\gh.exe'' repo list umero882 --limit 10\")",
      "Bash(powershell -Command \"& ''C:\\Program Files\\GitHub CLI\\gh.exe'' repo create umero882/ethiopian-maids-st --public --description ''Ethiopian Maids Service Platform - A React-based platform connecting agencies, maids, and sponsors'' --confirm\")",
      "Bash(powershell -Command \"& ''C:\\Program Files\\GitHub CLI\\gh.exe'' repo create ethiopian-maids-st --public --description ''Ethiopian Maids Service Platform - A React-based platform connecting agencies, maids, and sponsors'' --source=. --push\")",
      "Bash(git remote:*)",
      "Bash(powershell -Command \"\n$GH = ''C:\\Program Files\\GitHub CLI\\gh.exe''\n$REPO = ''umero882/ethiopian-maids''\n\nWrite-Host ''Setting up GitHub Secrets...'' -ForegroundColor Blue\nWrite-Host ''''\n\n# Vercel\n& $GH secret set VERCEL_TOKEN --body ''olBORiuI87mRG6Qo1NR00mAD'' --repo $REPO\n& $GH secret set VERCEL_ORG_ID --body ''team_XnY1b9HZxbTV3OElmnJdJIZI'' --repo $REPO\n& $GH secret set VERCEL_PROJECT_ID --body ''prj_T3mzPCeUM1kWrMaqf6E2Cad9lPQ3'' --repo $REPO\n\nWrite-Host ''Vercel secrets configured'' -ForegroundColor Green\n\")",
      "Bash(vercel login:*)",
      "Bash(export VERCEL_TOKEN=olBORiuI87mRG6Qo1NR00mAD)",
      "Bash(vercel whoami:*)",
      "Bash(vercel link:*)",
      "Bash(vercel:*)",
      "Bash(powershell -Command \"\n$GH = ''C:\\Program Files\\GitHub CLI\\gh.exe''\n$REPO = ''umero882/ethiopian-maids''\n\nWrite-Host ''Setting up GitHub Secrets...'' -ForegroundColor Blue\nWrite-Host ''''\n\n# Vercel\n& $GH secret set VERCEL_TOKEN --body ''olBORiuI87mRG6Qo1NR00mAD'' --repo $REPO\n& $GH secret set VERCEL_ORG_ID --body ''team_XnY1b9HZxbTV3OElmnJdJIZI'' --repo $REPO\n& $GH secret set VERCEL_PROJECT_ID --body ''prj_uqH4j6Ec0UuvkKYS9frhOjemnyHp'' --repo $REPO\n\nWrite-Host ''''\nWrite-Host ''Vercel secrets configured successfully!'' -ForegroundColor Green\n\")",
      "Bash(node scripts/fix-vercel-env.js:*)",
      "Bash(node scripts/fix-vercel-env.cjs:*)",
      "Bash(powershell -Command \"& ''C:\\Program Files\\GitHub CLI\\gh.exe'' run list --repo umero882/ethiopian-maids --limit 5\")",
      "Bash(npm cache clean:*)",
      "Bash(node scripts/force-fix-env.cjs:*)",
      "WebFetch(domain:ethiopian-maids.vercel.app)",
      "Bash(node scripts/verify-vercel-env.cjs:*)",
      "Bash(node scripts/fix-production-db.cjs:*)"
    ],
    "deny": [],
    "ask": []
  }
}
